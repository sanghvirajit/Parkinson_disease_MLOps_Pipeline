services:
  magic-platform:
    env_file:
      - .env.dev
    build:
      context: .
      dockerfile: mage.dockerfile
    command: /app/run_app.sh mage start $PROJECT_NAME
    ports:
      - 6789:6789
    volumes:
      # Mount your local codebase to the container.
      - .:/$MAGE_CODE_PATH
      # Store the data output on local machine to easily debug (optional).
      - ~/.mage_data:/$MAGE_CODE_PATH/mage_data
      # Initial credentials to create an IAM user with limited permissions for deployment.
      - ~/.aws:/root/.aws
      # Local machine’s SSH keys to pull and push to your GitHub repository.
      - ~/.ssh:/root/.ssh:ro
      # Local machine’s GitHub configs
      - ~/.gitconfig:/root/.gitconfig:ro
    restart: on-failure:5
    networks:
      - app-network
    depends_on:
      - magic-database
    stdin_open: true # used for interactive debugging
    tty: true # used for interactive debugging

  magic-database:
    image: pgvector/pgvector:0.6.0-pg16
    env_file:
      - .env.dev
    ports:
      - 5432:5432
    volumes:
      - ~/.postgres/data:/var/lib/postgresql/data
      # Custom database initialization scripts (optional).
      - ./scripts/database:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - app-network

  mlflow:
    build:
      context: .
      dockerfile: mlflow.dockerfile
    ports:
      - "5000:5000"
    volumes:
      - "${PWD}/mlruns_:/home/mlruns_/"
      - "${PWD}/mlruns_/mlartifacts:/mlartifacts"
    networks:
      - app-network

  local_api:
    build:
      context: .
      dockerfile: local.dockerfile
    ports:
      - 9696:9696
    networks:
      - app-network
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./monitoring/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./monitoring/dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
      - ./monitoring/dashboard.yml:/etc/grafana/provisioning/dashboards/default.yml

networks:
  app-network:
    driver: bridge
